
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp TILDE      &kp N1   &kp N2     &kp N3        &kp N4  &kp N5            &kp LEFT_ARROW                                                                &kp RIGHT_ARROW  &kp N6         &kp N7            &kp N8             &kp N9    &kp N0      &kp MINUS
          &kp TAB       &kp Q    &kp W      &kp E         &kp R   &kp T                  &kp HOME                                                                   &kp UP_ARROW   &kp Y          &kp U             &kp I              &kp O     &kp P       &kp BSLH
 &kp LEFT_CONTROL       &kp A    &kp S      &kp D         &kp F   &kp G                   &kp END       &mo 1         &none   &none   &none    &none      &mo 2   &kp DOWN_ARROW   &kp H          &kp J             &kp K              &kp L  &kp SEMI        &kp SQT
        &kp LSHFT       &kp Z    &kp X      &kp C         &kp V   &kp B                     &none       &none         &none   &none   &none    &none      &none            &none   &kp N          &kp M         &kp COMMA            &kp DOT  &kp FSLH      &kp RSHFT
        &kp EQUAL  &kp RETURN  &kp F13  &kp SPACE  &kp LEFT_ALT                          &kp BSPC  &kp ESCAPE  &kp LEFT_WIN                  &kp TAB  &kp ENTER        &kp SPACE          &kp RIGHT_WIN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp F14  &kp RIGHT_ALT
            >;
        };

        layer_keypad {
            bindings = <
 &kp ESCAPE           &kp F1       &kp F2                &kp F3                 &kp F4     &kp F5                &trans                                                  &trans          &kp F6     &kp F7      &kp F8         &kp F9          &kp F10  &kp F11
     &trans  &kp EXCLAMATION  &kp AT_SIGN        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PIPE                &trans                                                  &trans          &trans  &kp KP_N7   &kp KP_N8      &kp KP_N9  &kp KP_MULTIPLY  &kp F12
     &trans         &kp HASH   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE                &trans   &none  &trans   &none   &none  &trans   &none  &trans          &trans  &kp KP_N4   &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &kp DEL
     &trans      &kp PERCENT    &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                 &none   &none  &trans   &none   &none  &trans   &none   &none  &kp KP_NUMLOCK  &kp KP_N1   &kp KP_N2      &kp KP_N3     &kp KP_SLASH   &trans
     &trans        &kp COMMA       &trans                &trans                 &trans                       &kp DELETE  &trans  &trans                  &trans  &trans  &trans                  &kp KP_N0  &kp KP_DOT  &kp AMPERSAND     &kp KP_EQUAL   &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans   &none   &none  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
